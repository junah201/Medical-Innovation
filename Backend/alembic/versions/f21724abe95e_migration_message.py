"""migration message

Revision ID: f21724abe95e
Revises: 028b879bb990
Create Date: 2023-05-10 00:18:01.061404

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'f21724abe95e'
down_revision = '028b879bb990'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('judging_result',
    sa.Column('id', mysql.INTEGER(unsigned=True), nullable=False, comment='고유 번호'),
    sa.Column('judging_event_id', mysql.INTEGER(unsigned=True), nullable=False, comment='행사 고유 번호'),
    sa.Column('participant_id', mysql.INTEGER(unsigned=True), nullable=False, comment='참가자 고유 번호'),
    sa.Column('user_id', mysql.INTEGER(unsigned=True), nullable=False, comment='심사위원 고유 번호'),
    sa.Column('nth', mysql.INTEGER(unsigned=True), nullable=False, comment='n차 심사'),
    sa.Column('technical_score1', mysql.INTEGER(unsigned=True), nullable=False, comment='기술성 심사 1점수'),
    sa.Column('technical_score2', mysql.INTEGER(unsigned=True), nullable=False, comment='기술성 심사 2점수'),
    sa.Column('technical_score3', mysql.INTEGER(unsigned=True), nullable=False, comment='기술성 심사 3점수'),
    sa.Column('technical_score4', mysql.INTEGER(unsigned=True), nullable=False, comment='기술성 심사 4점수'),
    sa.Column('technical_score5', mysql.INTEGER(unsigned=True), nullable=False, comment='기술성 심사 5점수'),
    sa.Column('marketability_score1', mysql.INTEGER(unsigned=True), nullable=False, comment='시장성 심사 1점수'),
    sa.Column('marketability_score2', mysql.INTEGER(unsigned=True), nullable=False, comment='시장성 심사 2점수'),
    sa.Column('marketability_score3', mysql.INTEGER(unsigned=True), nullable=False, comment='시장성 심사 3점수'),
    sa.Column('marketability_score4', mysql.INTEGER(unsigned=True), nullable=False, comment='시장성 심사 4점수'),
    sa.Column('business_score1', mysql.INTEGER(unsigned=True), nullable=False, comment='사업성 심사 1점수'),
    sa.Column('business_score2', mysql.INTEGER(unsigned=True), nullable=False, comment='사업성 심사 2점수'),
    sa.Column('business_score3', mysql.INTEGER(unsigned=True), nullable=False, comment='사업성 심사 3점수'),
    sa.Column('business_score4', mysql.INTEGER(unsigned=True), nullable=False, comment='사업성 심사 4점수'),
    sa.Column('business_score5', mysql.INTEGER(unsigned=True), nullable=False, comment='사업성 심사 5점수'),
    sa.Column('business_score6', mysql.INTEGER(unsigned=True), nullable=False, comment='사업성 심사 6점수'),
    sa.Column('business_score7', mysql.INTEGER(unsigned=True), nullable=False, comment='사업성 심사 7점수'),
    sa.Column('business_score8', mysql.INTEGER(unsigned=True), nullable=False, comment='사업성 심사 8점수'),
    sa.Column('other_score1', mysql.INTEGER(unsigned=True), nullable=False, comment='기타 심사 점수'),
    sa.Column('other_comment', sa.VARCHAR(length=1000), nullable=False, comment='기타 의견'),
    sa.ForeignKeyConstraint(['judging_event_id'], ['judging_event.id'], ),
    sa.ForeignKeyConstraint(['participant_id'], ['judging_participant.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    mysql_collate='utf8_general_ci'
    )
    with op.batch_alter_table('judging_participant', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'judging_event', ['event_id'], ['id'])

    with op.batch_alter_table('participant', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'public_event', ['public_event_id'], ['id'])

    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'user', ['author_name'], ['name'])
        batch_op.create_foreign_key(None, 'board', ['board_id'], ['id'])

    with op.batch_alter_table('private_participant', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'private_event', ['event_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    with op.batch_alter_table('sponsor', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sponsor', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('private_participant', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('participant', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('judging_participant', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')

    op.drop_table('judging_result')
    # ### end Alembic commands ###
